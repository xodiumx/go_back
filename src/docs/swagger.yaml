basePath: /
definitions:
  api.BadRequest:
    properties:
      detail:
        $ref: '#/definitions/api.Message'
    type: object
  api.Message:
    properties:
      message:
        example: Some message
        type: string
      status:
        example: not ok
        type: string
    type: object
  api.UserResponse:
    properties:
      email:
        example: john.doe@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: Это тестовый сервер Swagger для Gin.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Example API
  version: "1.0"
paths:
  /api/v1/create:
    post:
      consumes:
      - application/json
      description: Создает новый объект, принимая JSON в теле запроса
      parameters:
      - description: Тело запроса
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новый объект
      tags:
      - create
  /api/v1/hello:
    get:
      consumes:
      - application/json
      description: Возвращает сообщение "Hello, World!"
      produces:
      - application/json
      responses:
        "200":
          description: Hello, World!
          schema:
            type: string
      tags:
      - example
  /api/v1/key/{key}:
    get:
      consumes:
      - application/json
      description: Возвращает переданный ключ
      parameters:
      - description: Ключ
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить значение по ключу
      tags:
      - example
  /api/v1/search:
    get:
      consumes:
      - application/json
      description: Возвращает результаты поиска по параметру "q" и отображает выбранную
        страницу через параметр "page"
      parameters:
      - description: Поисковый запрос
        in: query
        name: q
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Поиск по query-параметрам
      tags:
      - search
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: description
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.BadRequest'
      summary: Ручка с указанной схемой
      tags:
      - with_schema
swagger: "2.0"
